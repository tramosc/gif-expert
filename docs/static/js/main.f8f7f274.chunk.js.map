{"version":3,"sources":["components/AddCategory.js","Helpers/GetGifts.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFechGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifts","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"yLAkCeA,EAhCK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEDC,mBAAS,IAFR,mBAE9BC,EAF8B,KAElBC,EAFkB,KAkBrC,OACI,oCACA,0BAAMC,SAXW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAI,OAAGP,GAAH,mBAAkBO,OACpCN,EAAc,OAOd,2BACIO,KAAK,OACLC,MAAOT,EACPU,SAnBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,uBCLlBG,EAAQ,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEdC,EAFc,iDAEmCC,UAAUH,GAF7C,+DAIDI,MAAMF,GAJL,cAIdG,EAJc,gBAKCA,EAAKC,OALN,uBAKbC,EALa,EAKbA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GACnB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QAXrB,kBAebM,GAfa,4CAAH,sDCYNO,EAbK,SAAC,GAAkB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAGzB,OADAc,QAAQC,IAAI,CAACL,QAAOV,QAGhB,yBAAKgB,UAAU,gDACf,yBAAKC,IAAKjB,EAAKkB,IAAKR,IACpB,2BAAIA,KC2BGS,EA/BQ,SAAC,GAAgB,IAAfrB,EAAc,EAAdA,SAAc,ECFX,SAACA,GAAc,IAAD,EAEZd,mBAAS,CAC/BqB,KAAM,GACNe,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAsBtC,OAfAC,qBAAU,WAEN1B,EAAUC,GAAW0B,MAAM,SAAAC,GACvBC,YAAY,WAETJ,EAAS,CACRjB,KAAMoB,EACNL,SAAS,MAEV,UAGR,CAACtB,IAGGuB,EDlByBM,CAAa7B,GAAhCa,EAFsB,EAE5BN,KAAce,EAFc,EAEdA,QASrB,OACI,oCACA,wBAAIJ,UAAU,uCAAuClB,GAEpDsB,EAAU,wBAAIJ,UAAU,2CAAd,eAA0E,KAGrF,yBAAKA,UAAU,qDAEHL,EAAOJ,KAAK,SAAAC,GAAG,OACX,kBAAC,EAAD,eACAoB,IAAKpB,EAAIC,IACLD,UEKbqB,EA9BM,WAAM,MAGY7C,mBAAS,CAAC,kBAHtB,mBAGjB8C,EAHiB,KAGL/C,EAHK,KAUvB,OACI,oCAEI,4CACA,6BACJ,kBAAC,EAAD,CAAaA,cAAeA,IAExB,4BAEQ+C,EAAWvB,KAAI,SAAAT,GAAQ,OACnB,kBAAC,EAAD,CACA8B,IAAK9B,EACLA,SAAUA,U,MCpBlCiC,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.f8f7f274.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst AddCategory = ({setCategories}) => {\r\n//state de definicion de el contenedor del input y la funcion que lo contiene\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n        //recibe el input y lo actualiza\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value)\r\n    }\r\n    //condiciones para que se actualice el input cada vez que se escribe\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length > 2){\r\n            setCategories(cats=>[inputValue, ...cats ]);\r\n            setInputValue('');\r\n        }\r\n\r\n    }\r\n    return ( \r\n        <>\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />            \r\n        </form>\r\n            \r\n        </>\r\n     );\r\n}\r\n \r\nexport default AddCategory;","\r\n\r\n\r\nexport const getGifts = async(category) =>{\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=Fgtl7rKgfGej3J8uDwPooI25jpXZc8yK`;\r\n    \r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map( img=> {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return(gifs);\r\n\r\n}","import React from 'react';\r\n\r\nconst GifGridItem = ({title, url}) => {\r\n\r\n    console.log({title, url})\r\n    return ( \r\n    \r\n        <div className=\"card animate__animated animate__bounceInDown\">\r\n        <img src={url} alt={title}/>\r\n        <p>{title}</p>\r\n        </div>\r\n\r\n     );\r\n}\r\n \r\nexport default GifGridItem;\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFechGifs';\r\nimport GifGridItem from './GifGridItem';\r\n//import { getGifts } from '../Helpers/GetGifts';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const {data: images, loading} = useFetchGifs(category);\r\n    /*\r\n    useEffect( () => {\r\n        getGifts(category).then(setImages);\r\n    }, [category])\r\n*/\r\n//[] significa las veces que va a ser lanzado\r\n\r\n    \r\n    return ( \r\n        <>\r\n        <h3 className=\"animate__animated animate__backInUp\">{category}</h3>\r\n\r\n        {loading ? <h1 className=\"animate__animated animate__bounceInDown\">Cargando...</h1>: null}\r\n        \r\n\r\n        <div className=\"card-grid animate__animated animate__bounceInDown\">\r\n                {\r\n                    images.map( img => (\r\n                        <GifGridItem \r\n                        key={img.id}\r\n                        {...img}/>\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n     );\r\n}\r\n \r\nexport default GifGrid;","import { useState, useEffect } from \"react\";\r\nimport { getGifts } from \"../Helpers/GetGifts\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n\r\n        getGifts( category ).then( imgs => {\r\n            setTimeout( () => {\r\n\r\n               setState({\r\n                data: imgs,\r\n                loading: false\r\n                });\r\n            }, 2000);   \r\n        })\r\n\r\n    }, [category])\r\n\r\n\r\n    return state; //state=> data:   , loading: \r\n}","import React, { useState } from 'react'\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\nconst GifExpertApp = () => {\r\n\r\n    //const categories = ['Dragon ball','SAO','Saint Seiya']\r\n    const[categories, setCategories] = useState(['Dragon Ball Z']);\r\n/*\r\n    const handleAdd = () => {\r\n        //setCategories([...categories, 'Bleach']);\r\n        setCategories(cats=>[...categories, 'Bleach']);\r\n    }\r\n    */\r\n    return ( \r\n        <>\r\n\r\n            <h1>GifExpertApp</h1>\r\n            <hr/>\r\n        <AddCategory setCategories={setCategories}/>\r\n\r\n            <ol>\r\n                {\r\n                    categories.map(category => (\r\n                        <GifGrid \r\n                        key={category}\r\n                        category={category}/>\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n     );\r\n}\r\n \r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}